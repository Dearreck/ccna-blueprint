[
  {
    "id": "server_function_q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.1",
      "description_es": "Explicar el rol y la función de los componentes de la red",
      "description_en": "Explain the role and function of network components",
      "subtopic_id": "1.1.g",
      "subtopic_description": "Servers"
    },
    "question_es": "¿Cuál es una función realizada por un **servidor web**?",
    "question_en": "What is a function performed by a **web server**?",
    "image": null,
    "code": null,
    "options": [
      { "text_es": "autenticar y autorizar la identidad de un usuario", "text_en": "authenticate and authorize a user's identity", "isCorrect": false },
      { "text_es": "proporcionar una aplicación que se transmite a través de `HTTP`", "text_en": "provide an application that is transmitted over `HTTP`", "isCorrect": true },
      { "text_es": "almacenar de forma segura archivos para acceso `FTP`", "text_en": "securely store files for `FTP` access", "isCorrect": false },
      { "text_es": "enviar y recibir correo electrónico desde dispositivos cliente", "text_en": "send and retrieve email from client devices", "isCorrect": false }
    ],
    "explanation_es": "La función principal de un **servidor web** es escuchar las solicitudes `HTTP` de los clientes (como los navegadores web) y responder entregando los recursos solicitados. Las otras opciones describen las funciones de servidores de `autenticación`, `FTP` o de `correo electrónico`.",
    "explanation_en": "The primary function of a **web server** is to listen for `HTTP` requests from clients (like web browsers) and respond by delivering the requested resources. The other options describe the functions of `authentication`, `FTP`, or `email` servers."
  },
  {
    "id": "ipv6_address_type_ula_q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.9",
      "description_es": "Describir los tipos de direcciones IPv6",
      "description_en": "Describe IPv6 address types",
      "subtopic_id": "1.9.a",
      "subtopic_description": "Unicast (global, unique local, and link local)"
    },
    "question_es": "Un ingeniero de redes está instalando un dispositivo con capacidad solo para `IPv6`. El cliente ha solicitado que la dirección IP del dispositivo sea alcanzable **únicamente desde la red interna**. ¿Qué tipo de dirección `IPv6` debe asignar el ingeniero?",
    "question_en": "A network engineer is installing an `IPv6`-only capable device. The client has requested that the device IP address be reachable **only from the internal network**. Which type of `IPv6` address must the engineer assign?",
    "image": null,
    "code": null,
    "options": [
      { "text_es": "dirección global agregable", "text_en": "aggregatable global address", "isCorrect": false },
      { "text_es": "dirección `IPv4`-compatible `IPv6`", "text_en": "IPv4-compatible IPv6 address", "isCorrect": false },
      { "text_es": "dirección link-local", "text_en": "link-local address", "isCorrect": false },
      { "text_es": "dirección local única (unique local)", "text_en": "unique local address", "isCorrect": true }
    ],
    "explanation_es": "Las **direcciones locales únicas** (`Unique Local Addresses - ULA`), que comienzan con el prefijo `FD00::/8`, son el equivalente en `IPv6` de las direcciones privadas `IPv4` (`RFC 1918`). Están diseñadas para ser enrutables dentro de una red interna pero **no en la Internet pública**, cumpliendo exactamente con el requisito del cliente.",
    "explanation_en": "Unique Local Addresses (`ULA`), which begin with the `FD00::/8` prefix, are the `IPv6` equivalent of private `IPv4` addresses (`RFC 1918`). They are designed to be routable within an internal network but **not on the public Internet**, precisely meeting the client's requirement."
  },
  {
    "id": "public_cloud_benefit_q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.2",
      "description_es": "Describir las características de las arquitecturas de topología de red",
      "description_en": "Describe characteristics of network topology architectures",
      "subtopic_id": "1.2.f",
      "subtopic_description": "On-premises and cloud"
    },
    "question_es": "¿Cuál es un beneficio para los usuarios externos que consumen recursos de la **nube pública**?",
    "question_en": "What is a benefit for external users who consume **public cloud** resources?",
    "image": null,
    "code": null,
    "options": [
      { "text_es": "todos están alojados en servidores físicos", "text_en": "all hosted on physical servers", "isCorrect": false },
      { "text_es": "ubicados en el mismo centro de datos que los usuarios", "text_en": "located in the same data center as the users", "isCorrect": false },
      { "text_es": "implementados sobre una `WAN` dedicada", "text_en": "implemented over a dedicated `WAN`", "isCorrect": false },
      { "text_es": "se accede a ellos a través de Internet", "text_en": "accessed over the Internet", "isCorrect": true }
    ],
    "explanation_es": "La característica y principal beneficio de la **nube pública** es que sus recursos (servidores, almacenamiento, aplicaciones) están disponibles para los usuarios a través de la **Internet pública**. Esto permite un acceso global y flexible desde cualquier lugar con una conexión a Internet.",
    "explanation_en": "The defining characteristic and main benefit of the **public cloud** is that its resources (servers, storage, applications) are made available to users over the **public Internet**. This allows for global and flexible access from any location with an Internet connection."
  },
  {
    "id": "spine_leaf_interconnection_q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.2",
      "description_es": "Describir las características de las arquitecturas de topología de red",
      "description_en": "Describe characteristics of network topology architectures",
      "subtopic_id": "1.2.c",
      "subtopic_description": "Spine-leaf"
    },
    "question_es": "¿Cómo están interconectados los switches en una topología `spine-and-leaf`?",
    "question_en": "How are the switches in a `spine-and-leaf` topology interconnected?",
    "image": null,
    "code": null,
    "options": [
      { "text_es": "Cada switch `leaf` se conecta a un switch `leaf` central, y luego se enlaza a un switch `spine` principal.", "text_en": "Each `leaf` switch is connected to a central `leaf` switch, then uplinked to a core `spine` switch.", "isCorrect": false },
      { "text_es": "Cada switch `leaf` se conecta a dos switches `spine`, creando un bucle.", "text_en": "Each `leaf` switch is connected to two `spine` switches, making a loop.", "isCorrect": false },
      { "text_es": "Cada switch `leaf` se conecta a **cada** switch `spine`.", "text_en": "Each `leaf` switch is connected to **each** `spine` switch.", "isCorrect": true },
      { "text_es": "Cada switch `leaf` se conecta a **uno** de los switches `spine`.", "text_en": "Each `leaf` switch is connected to **one** of the `spine` switches.", "isCorrect": false }
    ],
    "explanation_es": "La regla fundamental de una arquitectura `spine-leaf` es que **cada switch `leaf` debe conectarse a cada switch `spine`** en la topología. No hay conexiones directas entre switches `leaf` ni entre switches `spine`. Esto crea una topología de malla completa que optimiza la latencia y el ancho de banda.",
    "explanation_en": "The fundamental rule of a `spine-leaf` architecture is that **every `leaf` switch must connect to every `spine` switch** in the topology. There are no direct connections between `leaf` switches or between `spine` switches. This creates a full-mesh topology that optimizes latency and bandwidth."
  },
  {
    "id": "ifconfig_subnet_calc_q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.6",
      "description_es": "Configurar y verificar el direccionamiento y subnetting de IPv4",
      "description_en": "Configure and verify IPv4 addressing and subnetting",
      "subtopic_id": "1.6",
      "subtopic_description": "Subnet Calculation"
    },
    "question_es": "**Consulte la información.** Un ingeniero de redes debe proporcionar los detalles de direccionamiento IP configurados para investigar un problema con una regla de firewall. ¿Qué subred y máscara identifican lo que está configurado en la interfaz final?",
    "question_en": "**Refer to the exhibit.** A network engineer must provide configured IP addressing details to investigate a firewall rule issue. Which subnet and mask identify what is configured on the end interface?",
    "image": null,
    "code": "MacOS$ ifconfig\nen0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n    options=400<CHANNEL_IO>\n    ether f0:18:98:64:60:32\n    inet6 fe80::492:c09f:57cf:8c36%en0 prefixlen 64 secured scopeid 0x6\n    inet 10.8.138.14 netmask 0xffffe000 broadcast 10.8.159.255\n    nd6 options=201<PERFORMNUD,DAD>\n    media: autoselect\n    status: active",
    "options": [
      { "text_es": "`10.8.138.0/24`", "text_en": "`10.8.138.0/24`", "isCorrect": false },
      { "text_es": "`10.8.128.0/19`", "text_en": "`10.8.128.0/19`", "isCorrect": true },
      { "text_es": "`10.8.0.0/16`", "text_en": "`10.8.0.0/16`", "isCorrect": false },
      { "text_es": "`10.8.64.0/18`", "text_en": "`10.8.64.0/18`", "isCorrect": false }
    ],
    "explanation_es": "La máscara de red se muestra en formato hexadecimal: `0xffffe000`. Al convertirla a binario, obtenemos `11111111.11111111.11100000.00000000`. El número de bits '1' es **19**, por lo que el prefijo es `/19`. Al aplicar esta máscara a la dirección IP `10.8.138.14` mediante una operación `AND` a nivel de bits, la dirección de red resultante es `10.8.128.0`.",
    "explanation_en": "The netmask is shown in hexadecimal format: `0xffffe000`. Converting this to binary gives `11111111.11111111.11100000.00000000`. The number of '1' bits is **19**, so the prefix is `/19`. Applying this mask to the IP address `10.8.138.14` via a bitwise `AND` operation results in the network address `10.8.128.0`."
  },
  {
    "id": "ccna-phy-om3-om4-core-01",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.3",
      "description_es": "Comparar tipos de interfaces físicas y de cableado",
      "description_en": "Compare physical interface and cabling types",
      "subtopic_id": "1.3.a",
      "subtopic_description": "Single-mode fiber, multimode fiber, copper"
    },
    "question_es": "¿Cuál es una similitud entre los cables de fibra óptica `OM3` y `OM4`?",
    "question_en": "What is a similarity between `OM3` and `OM4` fiber optic cable?",
    "image": null,
    "code": null,
    "options": [
      { "text_es": "Ambos tienen un diámetro de núcleo de 50 micrones.", "text_en": "Both have a 50 micron core diameter.", "isCorrect": true },
      { "text_es": "Ambos tienen un diámetro de núcleo de 100 micrones.", "text_en": "Both have a 100 micron core diameter.", "isCorrect": false },
      { "text_es": "Ambos tienen un diámetro de núcleo de 62.5 micrones.", "text_en": "Both have a 62.5 micron core diameter.", "isCorrect": false },
      { "text_es": "Ambos tienen un diámetro de núcleo de 9 micrones.", "text_en": "Both have a 9 micron core diameter.", "isCorrect": false }
    ],
    "explanation_es": "Tanto `OM3` como `OM4` son tipos de fibra óptica multimodo optimizada para láser (`LOMMF`), utilizadas comúnmente en centros de datos para velocidades de `10 Gbps` y superiores. Aunque tienen diferencias en rendimiento, comparten una característica física fundamental.\n\n### Fibra OM3\n* **Propósito:** Diseñada para soportar `10 Gigabit Ethernet` hasta **300 metros**.\n* **Ancho de banda modal:** `2000 MHz·km`.\n* **Diámetro del núcleo:** **50 micrones**.\n* **Diámetro del revestimiento (cladding):** 125 micrones.\n* **Color de la cubierta:** Generalmente `Aqua` (turquesa).\n\n### Fibra OM4\n* **Propósito:** Es una mejora de `OM3`, diseñada para mayores distancias y velocidades. Soporta `10 Gigabit Ethernet` hasta **550 metros** y `40/100 Gigabit Ethernet` hasta **150 metros**.\n* **Ancho de banda modal:** `4700 MHz·km`.\n* **Diámetro del núcleo:** **50 micrones**.\n* **Diámetro del revestimiento (cladding):** 125 micrones.\n* **Color de la cubierta:** Generalmente `Violeta` (o `Aqua`).\n\n### Similitud Clave y Análisis de Opciones\nLa similitud más importante es que **ambas, `OM3` y `OM4`, utilizan un núcleo de vidrio con un diámetro de 50 micrones (µm)**. La diferencia principal no está en su tamaño físico, sino en la calidad de fabricación del núcleo.\n\n* Un núcleo de `62.5 µm` corresponde a fibras más antiguas como `OM1`.\n* Un núcleo de `9 µm` es el estándar para la fibra **monomodo** (`Single-Mode Fiber`), como `OS1/OS2`.",
    "explanation_en": "Both `OM3` and `OM4` are types of Laser-Optimized Multimode Fiber (`LOMMF`), commonly used in data centers for speeds of `10 Gbps` and higher. Although they have performance differences, they share a fundamental physical characteristic.\n\n### OM3 Fiber\n* **Purpose:** Designed to support `10 Gigabit Ethernet` up to **300 meters**.\n* **Modal Bandwidth:** `2000 MHz·km`.\n* **Core Diameter:** **50 microns**.\n* **Cladding Diameter:** 125 microns.\n* **Jacket Color:** Typically `Aqua`.\n\n### OM4 Fiber\n* **Purpose:** An improvement over `OM3`, designed for longer distances and higher speeds. It supports `10 Gigabit Ethernet` up to **550 meters** and `40/100 Gigabit Ethernet` up to **150 meters**.\n* **Modal Bandwidth:** `4700 MHz·km`.\n* **Core Diameter:** **50 microns**.\n* **Cladding Diameter:** 125 microns.\n* **Jacket Color:** Typically `Violet` (or `Aqua`).\n\n### Key Similarity and Options Analysis\nThe most important similarity is that **both `OM3` and `OM4` use a glass core with a diameter of 50 microns (µm)**. The main difference is not in their physical size but in the manufacturing quality of the core.\n\n* A `62.5 µm` core corresponds to older multimode fibers like `OM1`.\n* A `9 µm` core is the standard for **Single-Mode Fiber**, such as `OS1/OS2`."
  },
  {
    "id": "ccna-net-fund-private-ip-purpose-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.7",
      "description_es": "Describir el direccionamiento IPv4 privado",
      "description_en": "Describe private IPv4 addressing",
      "subtopic_id": "1.7",
      "subtopic_description": "Private IPv4 Addressing"
    },
    "question_es": "¿Cuál es el propósito **principal** del espacio de direcciones privadas?",
    "question_en": "What is the **primary** purpose of private address space?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "reducir la complejidad de la red",
        "text_en": "reduce network complexity",
        "isCorrect": false
      },
      {
        "text_es": "limitar el número de nodos accesibles a través de Internet",
        "text_en": "limit the number of nodes reachable via the Internet",
        "isCorrect": false
      },
      {
        "text_es": "conservar el espacio de direcciones globalmente único",
        "text_en": "conserve globally unique address space",
        "isCorrect": true
      },
      {
        "text_es": "simplificar el direccionamiento en la red",
        "text_en": "simplify the addressing in the network",
        "isCorrect": false
      }
    ],
    "explanation_es": "El propósito **fundamental** de las direcciones IPv4 privadas, definidas en el `RFC 1918`, es **conservar el limitado suministro de direcciones IPv4 públicas y globalmente únicas**. Al permitir que miles de redes privadas (corporativas, domésticas, etc.) reutilicen los mismos rangos de direcciones internamente, se reduce drásticamente la necesidad de que cada dispositivo tenga una dirección IP pública única.\n\n### Análisis de las Opciones:\n* **Reducir/Simplificar la complejidad:** Incorrecto. El uso de direccionamiento privado a menudo **aumenta** la complejidad de la red debido a la necesidad de implementar `NAT` (Network Address Translation) para permitir la comunicación con Internet.\n* **Limitar el número de nodos accesibles:** Incorrecto. Si bien es cierto que los nodos con direcciones privadas no son directamente accesibles desde Internet (lo que proporciona un beneficio de seguridad), este es un **efecto secundario**, no el propósito principal. El objetivo principal es la conservación de direcciones, no la seguridad o la limitación de la accesibilidad.\n* **Conservar el espacio de direcciones globalmente único:** Correcto. Esta es la razón principal por la que se creó el espacio de direcciones privadas. Sin él, el espacio de direcciones IPv4 se habría agotado mucho más rápido.",
    "explanation_en": "The **fundamental** purpose of private IPv4 addresses, as defined in `RFC 1918`, is to **conserve the limited supply of globally unique public IPv4 addresses**. By allowing thousands of private networks (corporate, home, etc.) to reuse the same address ranges internally, the need for every device to have a unique public IP address is drastically reduced.\n\n### Options Analysis:\n* **Reduce/Simplify complexity:** Incorrect. The use of private addressing often **increases** network complexity due to the need to implement `NAT` (Network Address Translation) to allow communication with the Internet.\n* **Limit the number of nodes reachable:** Incorrect. While it is true that nodes with private addresses are not directly reachable from the Internet (which provides a security benefit), this is a **side effect**, not the primary purpose. The main goal is address conservation, not security or limiting reachability.\n* **Conserve globally unique address space:** Correct. This is the primary reason why the private address space was created. Without it, the IPv4 address space would have been depleted much more quickly."
  },
  {
    "id": "ccna-wireless-ssid-case-sensitive-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.11",
      "description_es": "Describir los principios inalámbricos",
      "description_en": "Describe wireless principles",
      "subtopic_id": "1.11.b",
      "subtopic_description": "SSID"
    },
    "question_es": "¿Cuál es una especificación para los `SSIDs`?",
    "question_en": "What is a specification for `SSIDs`?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "Definen la `VLAN` en un switch.",
        "text_en": "They define the `VLAN` on a switch.",
        "isCorrect": false
      },
      {
        "text_es": "Deben incluir un número y una letra.",
        "text_en": "They must include one number and one letter.",
        "isCorrect": false
      },
      {
        "text_es": "Son sensibles a mayúsculas y minúsculas (case-sensitive).",
        "text_en": "They are case sensitive.",
        "isCorrect": true
      },
      {
        "text_es": "Son una característica de seguridad propietaria de Cisco.",
        "text_en": "They are a Cisco proprietary security feature.",
        "isCorrect": false
      }
    ],
    "explanation_es": "Un **`SSID`** (Service Set Identifier) es el nombre público de una red inalámbrica (`WLAN`). Una de sus características clave es que **distingue entre mayúsculas y minúsculas**.\n\n### Análisis de las Opciones:\n* **Definen la `VLAN` en un switch:** Incorrecto. Un `SSID` se **mapea** a una `VLAN` en la configuración de un punto de acceso (`AP`) o un controlador inalámbrico (`WLC`), pero no la define. El `SSID` es el nombre de la red Wi-Fi, mientras que la `VLAN` es un dominio de broadcast de Capa 2.\n* **Deben incluir un número y una letra:** Incorrecto. No existe ninguna regla que exija una combinación específica de caracteres. Un `SSID` puede tener entre 1 y 32 caracteres y puede consistir solo en letras, solo en números o una combinación.\n* **Son sensibles a mayúsculas y minúsculas:** Correcto. Esta es una especificación fundamental. Un dispositivo que intente conectarse a un `SSID` llamado `MiWiFi` no podrá conectarse si introduce `miwifi`.\n* **Son una característica de seguridad propietaria de Cisco:** Incorrecto. El `SSID` es un estándar de la industria definido en la norma `IEEE 802.11` y es utilizado por todos los fabricantes de equipos inalámbricos, no es exclusivo de Cisco.",
    "explanation_en": "An **`SSID`** (Service Set Identifier) is the public name of a wireless network (`WLAN`). One of its key characteristics is that it is **case-sensitive**.\n\n### Options Analysis:\n* **They define the `VLAN` on a switch:** Incorrect. An `SSID` is **mapped** to a `VLAN` in the configuration of an access point (`AP`) or a wireless LAN controller (`WLC`), but it does not define it. The `SSID` is the Wi-Fi network's name, whereas the `VLAN` is a Layer 2 broadcast domain.\n* **They must include one number and one letter:** Incorrect. There is no rule requiring a specific combination of characters. An `SSID` can be 1 to 32 characters long and can consist of only letters, only numbers, or a combination.\n* **They are case sensitive:** Correct. This is a fundamental specification. A device trying to connect to an `SSID` named `MyWiFi` will fail to connect if it enters `mywifi`.\n* **They are a Cisco proprietary security feature:** Incorrect. The `SSID` is an industry standard defined in the `IEEE 802.11` standard and is used by all wireless equipment vendors, it is not proprietary to Cisco."
  },
  {
    "id": "ccna-ipv6-anycast-address-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.9",
      "description_es": "Describir los tipos de direcciones IPv6",
      "description_en": "Describe IPv6 address types",
      "subtopic_id": "1.9.b",
      "subtopic_description": "Anycast"
    },
    "question_es": "¿Qué rango de direcciones `IPv6` es adecuado para direcciones anycast para servicios distribuidos como `DHCP` o `DNS`?",
    "question_en": "Which `IPv6` address range is suitable for anycast addresses for distributed services such as `DHCP` or `DNS`?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "`2002:db8:XXXX::/64`",
        "text_en": "`2002:db8:XXXX::/64`",
        "isCorrect": false
      },
      {
        "text_es": "`2001:db8:0234:ca3e::/128`",
        "text_en": "`2001:db8:0234:ca3e::/128`",
        "isCorrect": true
      },
      {
        "text_es": "`FF00::/12`",
        "text_en": "`FF00::/12`",
        "isCorrect": false
      },
      {
        "text_es": "`FE80::/10`",
        "text_en": "`FE80::/10`",
        "isCorrect": false
      }
    ],
    "explanation_es": "Una dirección **anycast** en `IPv6` es una dirección `unicast` que se asigna a múltiples interfaces. Los paquetes enviados a una dirección anycast son enrutados por la red al dispositivo **más cercano** (según la métrica del protocolo de enrutamiento).\n\nCrucialmente, las direcciones anycast se toman del mismo espacio de direcciones que las `unicast` y no tienen un formato o prefijo especial que las identifique.\n\n### Análisis de las Opciones\n| Opción | Tipo de Dirección | Razón |\n|---|---|---|\n| `2002:db8:XXXX::/64` | Unicast (6to4 - Obsoleto) | Representa un prefijo de red (`/64`), no una dirección de host. Además, el prefijo `2002::/16` (`6to4`) pertenece a una tecnología **obsoleta (RFC 7526)**, cuyo propósito era permitir que los paquetes de `IPv6` viajaran a través de redes `IPv4`. |\n| **`2001:db8:0234:ca3e::/128`** | **Unicast Global (GUA)** | **(Correcto)** Esta es una dirección de host `unicast` específica (`/128`). Es el formato perfecto para ser configurado como una dirección anycast en múltiples servidores que ofrecen el mismo servicio. |\n| `FF00::/12` | Multicast | **(Incorrecto)** El prefijo `FF00::/8` está reservado para direcciones `multicast`, que envían paquetes a un grupo de dispositivos, no al más cercano. |\n| `FE80::/10` | Unicast Link-Local | **(Incorrecto)** Estas direcciones solo son válidas en el enlace local y no son enrutables. Los servicios distribuidos como `DNS` requieren alcanzabilidad global. |",
    "explanation_en": "An **anycast** address in `IPv6` is a `unicast` address that is assigned to multiple interfaces. Packets sent to an anycast address are routed by the network to the **nearest** device (according to the routing protocol's metric).\n\nCrucially, anycast addresses are allocated from the `unicast` address space and have no special format or prefix.\n\n### Options Analysis\n| Option | Address Type | Rationale |\n|---|---|---|\n| `2002:db8:XXXX::/64` | Unicast (6to4 - Obsolete) | Represents a network prefix (`/64`), not a host address. Furthermore, the `2002::/16` prefix (`6to4`) belongs to a **deprecated technology (RFC 7526)**, whose purpose was to allow `IPv6` packets to travel over `IPv4` networks. |\n| **`2001:db8:0234:ca3e::/128`** | **Global Unicast (GUA)** | **(Correct)** This is a specific `unicast` host address (`/128`). It is the perfect format to be configured as an anycast address on multiple servers offering the same service. |\n| `FF00::/12` | Multicast | **(Incorrect)** The `FF00::/8` prefix is reserved for `multicast` addresses, which send packets to a group of devices, not the nearest one. |\n| `FE80::/10` | Link-Local Unicast | **(Incorrect)** These addresses are only valid on the local link and are not routable. Distributed services like `DNS` typically require global reachability. |"
  },
  {
    "id": "ccna-net-fund-collapsed-core-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.2",
      "description_es": "Describir las características de las arquitecturas de topología de red",
      "description_en": "Describe characteristics of network topology architectures",
      "subtopic_id": "1.2.a",
      "subtopic_description": "Two-tier"
    },
    "question_es": "¿Cuál es una característica de una topología de red de **núcleo colapsado**?",
    "question_en": "What is a characteristic of a **collapsed-core** network topology?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "Permite que todas las estaciones de trabajo en un entorno `SOHO` se conecten a un único switch con acceso a Internet.",
        "text_en": "It enables all workstations in a `SOHO` environment to connect on a single switch with internet access.",
        "isCorrect": false
      },
      {
        "text_es": "Permite que los dispositivos inalámbricos se conecten directamente a la capa de núcleo, lo que permite una transmisión de datos más rápida.",
        "text_en": "It allows wireless devices to connect directly to the core layer, which enables faster data transmission.",
        "isCorrect": false
      },
      {
        "text_es": "Permite que las capas de núcleo y acceso se conecten a un dispositivo de distribución lógico a través de un `EtherChannel`.",
        "text_en": "It enables the core and access layers to connect to one logical distribution device over an `EtherChannel`.",
        "isCorrect": false
      },
      {
        "text_es": "Permite que las capas de núcleo y distribución funcionen como una única capa combinada.",
        "text_en": "It allows the core and distribution layers to run as a single combined layer.",
        "isCorrect": true
      }
    ],
    "explanation_es": "Una topología de **núcleo colapsado** es una variación del diseño jerárquico de tres capas (Núcleo, Distribución, Acceso). En redes más pequeñas donde no se justifica tener capas de núcleo y distribución separadas, sus funciones se combinan en una sola capa. Esto crea un diseño de dos capas más simple y económico.\n\n### Comparación de Arquitecturas\n| Arquitectura | Capas |\n|---|---|\n| **Tres Capas** | `Núcleo` (Core), `Distribución` (Distribution), `Acceso` (Access) |\n| **Núcleo Colapsado (Dos Capas)** | `Núcleo/Distribución` (combinadas), `Acceso` (Access) |",
    "explanation_en": "A **collapsed-core** topology is a variation of the three-tier hierarchical design (Core, Distribution, Access). In smaller networks where having separate core and distribution layers is not justified, their functions are combined into a single layer. This creates a simpler and more cost-effective two-tier design.\n\n### Architecture Comparison\n| Architecture | Layers |\n|---|---|\n| **Three-Tier** | `Core`, `Distribution`, `Access` |\n| **Collapsed-Core (Two-Tier)** | `Core/Distribution` (combined), `Access` |"
  },
  {
    "id": "ccna-net-fund-unknown-unicast-flood-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.13",
      "description_es": "Describir los conceptos de conmutación",
      "description_en": "Describe switching concepts",
      "subtopic_id": "1.13.c",
      "subtopic_description": "Frame flooding"
    },
    "question_es": "¿Qué hace un switch cuando recibe una trama cuya dirección MAC de destino **no se encuentra** en la tabla de direcciones MAC?",
    "question_en": "What does a switch do when it receives a frame whose destination `MAC` address is **missing** from the `MAC` address table?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "Cambia la suma de comprobación (checksum) de la trama a un valor que indica una trama inválida.",
        "text_en": "It changes the checksum of the frame to a value that indicates an invalid frame.",
        "isCorrect": false
      },
      {
        "text_es": "Inunda la trama sin cambios por todos los puertos restantes en la `VLAN` de entrada.",
        "text_en": "It floods the frame unchanged across all remaining ports in the incoming `VLAN`.",
        "isCorrect": true
      },
      {
        "text_es": "Añade a la tabla una entrada estática para la `MAC` y apaga el puerto.",
        "text_en": "It appends the table with a static entry for the `MAC` and shuts down the port.",
        "isCorrect": false
      },
      {
        "text_es": "Actualiza la tabla `CAM` con la dirección `MAC` de destino de la trama.",
        "text_en": "It updates the `CAM` table with the destination `MAC` address of the frame.",
        "isCorrect": false
      }
    ],
    "explanation_es": "Cuando un switch recibe una trama destinada a una dirección MAC que no conoce (es decir, no está en su tabla de direcciones MAC), el switch trata la trama como un **\"unknown unicast\"** (unicast desconocido). Su comportamiento predeterminado en este caso es **inundar (flood)** la trama.\n\n### Proceso del Switch:\n1.  **MAC de Origen:** El switch primero examina la dirección `MAC` de origen y la aprende, asociándola al puerto de entrada en su tabla `MAC`. \n2.  **MAC de Destino:** Luego busca la `MAC` de destino en la tabla. \n3.  **Acción:** Si no encuentra una coincidencia, reenvía la trama por **todos los puertos** dentro de la misma `VLAN`, excepto el puerto por el que la recibió.  Este proceso se llama **`frame flooding`**. ",
    "explanation_en": "When a switch receives a frame destined for a MAC address it does not know (i.e., it's not in its MAC address table), the switch treats the frame as an **unknown unicast**. Its default behavior in this case is to **flood** the frame.\n\n### Switch Process:\n1.  **Source MAC:** The switch first examines the source `MAC` address and learns it, associating it with the incoming port in its `MAC` table. \n2.  **Destination MAC:** It then looks up the destination `MAC` in the table. \n3.  **Action:** If no match is found, it forwards the frame out of **all ports** within the same `VLAN`, except for the port it was received on.  This process is called **`frame flooding`**. "
  },
  {
    "id": "ccna-net-fund-tcp-udp-query-response-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.5",
      "description_es": "Comparar TCP con UDP",
      "description_en": "Compare TCP to UDP",
      "subtopic_id": "1.5",
      "subtopic_description": "Compare TCP to UDP"
    },
    "question_es": "¿Cómo encajan `TCP` y `UDP` en un modelo de consulta-respuesta?",
    "question_en": "How do `TCP` and `UDP` fit into a query-response model?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "`TCP` fomenta la entrega de paquetes fuera de orden, y `UDP` previene la reordenación.",
        "text_en": "`TCP` encourages out-of-order packet delivery, and `UDP` prevents re-ordering.",
        "isCorrect": false
      },
      {
        "text_es": "`TCP` evita el uso de secuenciación, y `UDP` evita el uso de acuses de recibo.",
        "text_en": "`TCP` avoids using sequencing, and `UDP` avoids using acknowledgments.",
        "isCorrect": false
      },
      {
        "text_es": "`TCP` utiliza detección de errores para paquetes, y `UDP` utiliza recuperación de errores.",
        "text_en": "`TCP` uses error detection for packets, and `UDP` uses error recovery.",
        "isCorrect": false
      },
      {
        "text_es": "`TCP` establece una conexión antes de enviar datos, y `UDP` los envía inmediatamente.",
        "text_en": "`TCP` establishes a connection prior to sending data, and `UDP` sends immediately.",
        "isCorrect": true
      }
    ],
    "explanation_es": "La diferencia fundamental entre `TCP` y `UDP` radica en cómo inician la comunicación. `TCP` es **orientado a la conexión**, mientras que `UDP` es **sin conexión**.\n\n* `TCP` **asegura** la entrega ordenada de paquetes mediante números de secuencia, mientras que `UDP` no garantiza el orden.\n* `TCP` es un protocolo fiable **precisamente porque** utiliza secuenciación y acuses de recibo (`ACKs`). `UDP` no utiliza ninguno de los dos.\n* Ambos protocolos utilizan un checksum para la **detección** de errores. Sin embargo, solo `TCP` proporciona **recuperación** de errores (solicitando la retransmisión de segmentos perdidos o corruptos). `UDP` simplemente descarta los datagramas con errores.\n* `TCP` realiza un saludo de tres vías (`three-way handshake`) para establecer una conexión fiable antes de que se transfiera cualquier dato. `UDP` no establece ninguna conexión; simplemente envía los datagramas al destino, lo que lo hace ideal para aplicaciones rápidas de consulta-respuesta como `DNS`.",
    "explanation_en": "The fundamental difference between `TCP` and `UDP` lies in how they initiate communication. `TCP` is **connection-oriented**, while `UDP` is **connectionless**.\n\n* `TCP` **ensures** in-order packet delivery using sequence numbers, while `UDP` does not guarantee order.\n* `TCP` is a reliable protocol **precisely because** it uses sequencing and acknowledgments (`ACKs`). `UDP` uses neither.\n* Both protocols use a checksum for error **detection**. However, only `TCP` provides error **recovery** (by requesting retransmission of lost or corrupt segments). `UDP` simply discards datagrams with errors.\n* `TCP` performs a three-way handshake to establish a reliable connection before any data is transferred. `UDP` establishes no connection; it simply sends the datagrams to the destination, which makes it ideal for quick query-response applications like `DNS`."
  },
  {
    "id": "ccna-net-fund-hypervisor-shared-component-q1",
    "category": "1.0-network-fundamentals",
    "isMultipleChoice": false,
    "topic": {
      "id": "1.12",
      "description_es": "Explicar los fundamentos de la virtualización (virtualización de servidores, contenedores y VRFs)",
      "description_en": "Explain virtualization fundamentals (server virtualization, containers, and VRFs)",
      "subtopic_id": "1.12",
      "subtopic_description": "server virtualization"
    },
    "question_es": "¿Qué componente físico se distribuye entre múltiples `máquinas virtuales` que se ejecutan en el mismo `hipervisor`?",
    "question_en": "Which physical component is distributed among multiple `virtual machines` running on the same `hypervisor`?",
    "image": null,
    "code": null,
    "options": [
      {
        "text_es": "almacenamiento externo",
        "text_en": "external storage",
        "isCorrect": false
      },
      {
        "text_es": "red de backplane",
        "text_en": "backplane network",
        "isCorrect": false
      },
      {
        "text_es": "interfaces de red",
        "text_en": "network interfaces",
        "isCorrect": true
      },
      {
        "text_es": "recursos de hardware",
        "text_en": "hardware resources",
        "isCorrect": false
      }
    ],
    "explanation_es": "Un `hipervisor` es responsable de abstraer los recursos físicos de un servidor y asignarlos a múltiples máquinas virtuales (`VMs`).\n\nEl componente físico que se comparte para la conectividad de red son las **interfaces de red** (también conocidas como `NICs` o tarjetas de red).\n\n### Funcionamiento\nEl `hipervisor` crea un **switch virtual** (`vSwitch`) que permite a las `VMs` comunicarse entre sí. Para la comunicación externa, el `hipervisor` asigna una **interfaz de red virtual** (`vNIC`) a cada `VM` y mapea el tráfico de todas estas `vNICs` a través de la(s) **interfaz(ces) de red física(s)** (`pNIC`) del servidor. De esta manera, una sola `pNIC` física es compartida por múltiples `VMs`.\n\n### Análisis de las Opciones\n* **Almacenamiento externo:** Incorrecto. Aunque el almacenamiento externo (como una `SAN`) puede ser compartido, no es un componente físico *del* servidor que se distribuye, sino un recurso de red.\n* **Red de backplane:** Incorrecto. Este término se refiere al bus interno de un switch o router modular, no a un componente de un servidor estándar.\n* **Recursos de hardware:** Incorrecto. Si bien es cierto que el `hipervisor` distribuye recursos de hardware como `CPU` y `RAM`, esta respuesta es demasiado genérica. \"Interfaces de red\" es un componente físico específico y la respuesta más precisa.",
    "explanation_en": "A `hypervisor` is responsible for abstracting a server's physical resources and allocating them to multiple virtual machines (`VMs`).\n\nThe physical component that is shared for network connectivity is the **network interfaces** (also known as `NICs` or network cards).\n\n### How it Works\nThe `hypervisor` creates a **virtual switch** (`vSwitch`) that allows `VMs` to communicate with each other. For external communication, the `hypervisor` assigns a **virtual network interface** (`vNIC`) to each `VM` and maps the traffic from all these `vNICs` through the server's physical **network interface(s)** (`pNIC`). In this way, a single physical `pNIC` is shared by multiple `VMs`.\n\n### Options Analysis\n* **External storage:** Incorrect. While external storage (like a `SAN`) can be shared, it's not a physical component *of* the server being distributed, but rather a network resource.\n* **Backplane network:** Incorrect. This term refers to the internal bus of a modular switch or router, not a component of a standard server.\n* **Hardware resources:** Incorrect. While it's true that the `hypervisor` distributes hardware resources like `CPU` and `RAM`, this answer is too generic. \"Network interfaces\" is a specific physical component and the most precise answer."
  }
]
